name: Build, Push & Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      ECR_REPO: ship-a-service
      IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/ship-a-service

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Configure AWS credentials via OIDC
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/ship-a-service-github-actions-role
          role-session-name: GitHubActions-${{ github.run_id }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          audience: sts.amazonaws.com

      # 2️⃣a Verify AWS credentials (check OIDC)
      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          echo "✅ AWS authentication successful"

      # 3️⃣ Login to ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 4️⃣ Build and push Docker image
      - name: Build and push Docker image
        working-directory: app/src
        run: |
          docker build -t $IMAGE_URI:main .
          docker tag $IMAGE_URI:main $IMAGE_URI:${GITHUB_SHA::8}
          docker push $IMAGE_URI:main
          docker push $IMAGE_URI:${GITHUB_SHA::8}

      # 5️⃣ Configure kubectl for EKS
      - name: Configure kubectl for EKS
        run: |
          aws eks update-kubeconfig --name ship-a-service --region $AWS_REGION

      # 6️⃣ Deploy with Helm
      - name: Helm deploy to dev
        working-directory: charts/app
        run: |
          helm upgrade --install ship-a-service . \
            -f values.dev.yaml \
            --set image.repository=$IMAGE_URI \
            --set image.tag=${GITHUB_SHA::8} \
            --wait --timeout 5m

      # 7️⃣ Verify deployment health
      - name: Verify deployment health
        run: |
          kubectl rollout status deployment/ship-a-service --timeout=60s
