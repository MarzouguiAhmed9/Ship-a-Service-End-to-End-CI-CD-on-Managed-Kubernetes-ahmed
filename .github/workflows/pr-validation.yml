name: PR Validation

on:
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # 3Ô∏è‚É£ Install Go dependencies
      - name: Install dependencies
        working-directory: app/src
        run: go mod tidy

      # 4Ô∏è‚É£ Lint Go code
      - name: Go lint
        working-directory: app/src
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...

      # 5Ô∏è‚É£ Run unit tests
      - name: Run unit tests
        working-directory: app/src
        run: go test ./...

      # 6Ô∏è‚É£ Docker build
      - name: Build Docker image
        working-directory: app/src
        run: docker build -t ahmed20007/app:latest .

      # 7Ô∏è‚É£ Run Trivy vulnerability scanner (continue on vulns)
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ahmed20007/app:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true
          exit-code: '0'

      # 8Ô∏è‚É£ Upload Trivy results to GitHub Security
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      # 9Ô∏è‚É£ Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # üîü Terraform Init
      - name: Terraform Init
        working-directory: infra/terraform
        run: terraform init -input=false

      # 1Ô∏è‚É£1Ô∏è‚É£ Terraform fmt check
      - name: Terraform fmt check
        working-directory: infra/terraform
        run: terraform fmt -check -recursive

      # 1Ô∏è‚É£2Ô∏è‚É£ Terraform validate
      - name: Terraform validate
        working-directory: infra/terraform
        run: terraform validate

      # 1Ô∏è‚É£3Ô∏è‚É£ Terraform plan
      - name: Terraform Plan
        working-directory: infra/terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: terraform plan

      # 1Ô∏è‚É£4Ô∏è‚É£ Helm lint
      - name: Helm lint
        working-directory: charts/app
        run: helm lint . -f values.dev.yaml

      # 1Ô∏è‚É£5Ô∏è‚É£ Install Helm unittest plugin
      - name: Install Helm unittest plugin
        run: helm plugin install https://github.com/quintush/helm-unittest

      # 1Ô∏è‚É£6Ô∏è‚É£ Helm unit tests
      - name: Helm unit tests
        working-directory: charts/app
        run: helm unittest .

      # 1Ô∏è‚É£7Ô∏è‚É£ Install tfsec
      - name: Install tfsec
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

      # 1Ô∏è‚É£8Ô∏è‚É£ TFSEC scan
      - name: TFSEC scan
        working-directory: infra/terraform
        run: tfsec . --severity CRITICAL,HIGH --exit-code 1
