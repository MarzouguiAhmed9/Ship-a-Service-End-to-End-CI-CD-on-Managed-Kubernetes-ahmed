---
- name: Setup CI Runner tools
  hosts: ci_runner
  become: yes

  tasks:
    - name: Install prerequisites
      apt:
        name:
          - curl
          - unzip
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: present
        cache_valid_time: 3600

    - name: Install Docker (only if not installed)
      shell: |
        if ! command -v docker >/dev/null 2>&1; then
          apt-get install -y ca-certificates curl gnupg lsb-release
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update -y
          apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        else
          echo "Docker already installed"
        fi
      args:
        creates: /usr/bin/docker

    - name: Install kubectl
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      args:
        creates: /usr/local/bin/kubectl

    - name: Install Helm
      shell: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Install Terraform
      block:
        - name: Download Terraform zip
          ansible.builtin.get_url:
            url: https://releases.hashicorp.com/terraform/1.8.3/terraform_1.8.3_linux_amd64.zip
            dest: /tmp/terraform_1.8.3_linux_amd64.zip
            mode: '0644'
          register: download_terraform
          until: download_terraform is succeeded
          retries: 3
          delay: 10

        - name: Unzip Terraform
          unarchive:
            src: /tmp/terraform_1.8.3_linux_amd64.zip
            dest: /usr/local/bin/
            remote_src: yes

    - name: Install AWS CLI v2
      shell: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip -o awscliv2.zip
        ./aws/install
      args:
        creates: /usr/local/bin/aws

    - name: Assume IAM role via OIDC
      shell: |
        CREDS=$(aws sts assume-role-with-web-identity \
          --role-arn arn:aws:iam::123456789012:role/github-ci-role \
          --role-session-name ci-session \
          --web-identity-token $GITHUB_TOKEN \
          --duration-seconds 900 \
          --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
          --output text)
        export AWS_ACCESS_KEY_ID=$(echo $CREDS | awk '{print $1}')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | awk '{print $2}')
        export AWS_SESSION_TOKEN=$(echo $CREDS | awk '{print $3}')
      environment:
        GITHUB_TOKEN: "{{ lookup('env','GITHUB_TOKEN') }}"

  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted
